<header class="header">
    <!-- Botón hamburguesa para móviles -->
    <button id="menu-toggle" class="menu-toggle" aria-label="Abrir menú">
        <span class="hamburger-icon"></span>
    </button>

    <nav class="nav" id="nav">
        <ul class="nav-list">
            <li class="nav-item">
                <a
                    href="#experiencia"
                    class="nav-link"
                    data-section="experiencia">Experiencia</a
                >
            </li>
            <li class="nav-item">
                <a href="#proyectos" class="nav-link" data-section="proyectos"
                    >Proyectos</a
                >
            </li>

            <li class="nav-item">
                <a
                    href="#trayectoria"
                    class="nav-link"
                    data-section="trayectoria">Trayectoría</a
                >
            </li>
            <li class="nav-item">
                <a href="#sobre-mi" class="nav-link" data-section="sobre-mi"
                    >Sobre mí</a
                >
            </li>
        </ul>
    </nav>
</header>

<style>
    .header {
        position: fixed;
        left: 0;
        right: 0;
        top: 0;
        width: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 20px;
        z-index: 1000;
        font-family: "Poppins", sans-serif;
    }

    .nav {
        transition: all 0.4s ease-in-out;
        border-radius: 25px;
        padding: 0px 20px;
        background: rgba(45, 43, 63, 0.6);
        backdrop-filter: blur(20px);
        border: 1px solid rgba(255, 255, 255, 0.1);
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
    }

    .nav-list {
        display: flex;
        gap: 30px;
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .nav-link {
        text-decoration: none;
        color: #e8e8e8;
        padding: 8px 16px;
        border-radius: 15px;
        font-weight: 400;
        font-size: 0.9rem;
        transition: all 0.3s ease;
        position: relative;
        display: block;
        box-sizing: border-box;
    }

    .nav-link:hover {
        color: #ffffff;
        background: rgba(255, 255, 255, 0.1);
        transform: translateY(-2px);
    }

    .nav-link:active {
        transform: translateY(0);
    }

    .active {
        color: #ffffff;
        background: rgba(130, 87, 229, 0.5);
        font-weight: 500;
    }

    .scrolled {
        background: rgba(29, 28, 42, 0.9);
        backdrop-filter: blur(40px);
        padding: 10px 25px;
        border: 1px solid rgba(255, 255, 255, 0.15);
        box-shadow: 0 12px 40px rgba(0, 0, 0, 0.5);
    }

    /* Botón hamburguesa - oculto en desktop */
    .menu-toggle {
        display: none;
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 1100;
        width: 40px;
        height: 40px;
        border: none;
        border-radius: 50%;
        background: rgba(45, 43, 63, 0.8);
        backdrop-filter: blur(15px);
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
        cursor: pointer;
        padding: 0;
        transition: all 0.3s ease;
    }

    .menu-toggle:hover {
        background: rgba(55, 53, 73, 0.9);
        transform: scale(1.05);
    }

    .menu-toggle:active {
        transform: scale(0.95);
    }

    /* Icono hamburguesa - corregido para alineación centrada */
    .hamburger-icon {
        position: relative;
        display: block;
        width: 20px;
        height: 2px;
        background-color: #e8e8e8;
        margin: 0 auto;
        transition: background-color 0.3s ease;
    }

    .hamburger-icon::before,
    .hamburger-icon::after {
        content: "";
        position: absolute;
        left: 0; /* Asegura alineación horizontal */
        width: 20px;
        height: 2px;
        background-color: #e8e8e8;
        transition: all 0.3s ease;
    }

    .hamburger-icon::before {
        top: -6px;
    }

    .hamburger-icon::after {
        top: 6px;
    }

    /* Animación del icono cuando está activo - corregida para centrado */
    .menu-toggle.active .hamburger-icon {
        background-color: transparent;
    }

    .menu-toggle.active .hamburger-icon::before {
        top: 0;
        transform: rotate(45deg);
    }

    .menu-toggle.active .hamburger-icon::after {
        top: 0;
        transform: rotate(-45deg);
    }

    /* Estilos responsivos */
    @media (max-width: 768px) {
        .header {
            justify-content: flex-end;
        }

        .menu-toggle {
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .nav {
            position: absolute;
            top: 70px; /* Espacio para el botón */
            right: 20px;
            left: auto;
            opacity: 0;
            visibility: hidden;
            transform: translateY(-20px);
            transition: all 0.3s ease;
            min-width: 200px;
            width: auto;
        }

        .nav.open {
            opacity: 1;
            visibility: visible;
            transform: translateY(0);
        }

        .nav-list {
            flex-direction: column;
            gap: 10px;
        }

        .nav-item {
            width: 100%;
        }

        .nav-link {
            width: 100%;
            padding: 10px 16px;
            text-align: left;
        }
    }

    @media (max-width: 400px) {
        .nav {
            padding: 10px;
            margin: 0;
            min-width: 180px;
            max-width: 80vw;
        }

        .nav-link {
            padding: 8px 12px;
            font-size: 0.8rem;
        }

        .menu-toggle {
            top: 15px;
            right: 15px;
            width: 36px;
            height: 36px;
        }
    }
</style>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        // Mejora en la obtención de elementos DOM con más seguridad de tipos
        const nav = document.getElementById("nav");
        const menuToggle = document.getElementById("menu-toggle");
        const navLinks = document.querySelectorAll(".nav-link");

        // Verificación de elementos antes de continuar
        if (!nav || !menuToggle) {
            console.error("Elementos de navegación no encontrados");
            return;
        }

        // Variables seguras una vez verificadas
        const safeNav = nav; // Ya sabemos que no es null después de la verificación
        const safeMenuToggle = menuToggle; // Ya sabemos que no es null después de la verificación

        // Función para manejar el toggle del menú móvil
        function toggleMobileMenu() {
            safeMenuToggle.classList.toggle("active");
            safeNav.classList.toggle("open");
        }

        // Event listener para el botón hamburguesa
        safeMenuToggle.addEventListener("click", toggleMobileMenu);

        // Cerrar menú al hacer click en un enlace (en móvil)
        if (navLinks && navLinks.length > 0) {
            navLinks.forEach((link) => {
                if (link) {
                    link.addEventListener("click", () => {
                        if (
                            window.innerWidth <= 768 &&
                            safeMenuToggle.classList.contains("active")
                        ) {
                            toggleMobileMenu();
                        }
                    });
                }
            });
        }

        // Función para detectar secciones activas
        function updateActiveSection() {
            try {
                // Usamos safeNav que ya sabemos que no es null

                // Actualizar clase scrolled
                if (window.scrollY > 50) {
                    safeNav.classList.add("scrolled");
                } else {
                    safeNav.classList.remove("scrolled");
                }

                // Detectar sección activa
                const sections = document.querySelectorAll("section[id]");
                let currentSection = "";

                if (sections && sections.length > 0) {
                    sections.forEach((section) => {
                        if (!section) return;

                        try {
                            const rect = section.getBoundingClientRect();
                            const sectionTop = window.scrollY + rect.top;
                            const sectionHeight = rect.height || 0;
                            const scrollPosition = window.scrollY + 100;

                            if (
                                scrollPosition >= sectionTop &&
                                scrollPosition < sectionTop + sectionHeight
                            ) {
                                const id = section.getAttribute("id");
                                currentSection = id || "";
                            }
                        } catch (err) {
                            console.error("Error al procesar sección:", err);
                        }
                    });
                }

                // Actualizar clase activa en los enlaces
                if (navLinks && navLinks.length > 0) {
                    navLinks.forEach((link) => {
                        if (!link) return;

                        link.classList.remove("active");
                        const section = link.getAttribute("data-section");
                        if (section === currentSection) {
                            link.classList.add("active");
                        }
                    });
                }
            } catch (error) {
                console.error("Error en updateActiveSection:", error);
            }
        }

        // Cambiar estilo al hacer scroll
        window.addEventListener("scroll", updateActiveSection);

        // Ejecutar una vez al cargar para establecer la sección activa inicial
        setTimeout(updateActiveSection, 500);

        // También actualizar cuando cambie el tamaño de la ventana
        window.addEventListener("resize", () => {
            updateActiveSection();

            // Si el tamaño de la ventana cambia a desktop, eliminar los estilos del menú móvil
            if (window.innerWidth > 768) {
                safeMenuToggle.classList.remove("active");
                safeNav.classList.remove("open");
            }
        });
    });
</script>
